/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'

// Create Virtual Routes

const TrainVisualizationLazyImport = createFileRoute('/train-visualization')()
const BingoSqlLazyImport = createFileRoute('/bingo-sql')()
const BingoLazyImport = createFileRoute('/bingo')()
const Advent2024LazyImport = createFileRoute('/advent2024')()

// Create/Update Routes

const TrainVisualizationLazyRoute = TrainVisualizationLazyImport.update({
  id: '/train-visualization',
  path: '/train-visualization',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/train-visualization.lazy').then((d) => d.Route),
)

const BingoSqlLazyRoute = BingoSqlLazyImport.update({
  id: '/bingo-sql',
  path: '/bingo-sql',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/bingo-sql.lazy').then((d) => d.Route))

const BingoLazyRoute = BingoLazyImport.update({
  id: '/bingo',
  path: '/bingo',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/bingo.lazy').then((d) => d.Route))

const Advent2024LazyRoute = Advent2024LazyImport.update({
  id: '/advent2024',
  path: '/advent2024',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/advent2024.lazy').then((d) => d.Route))

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/advent2024': {
      id: '/advent2024'
      path: '/advent2024'
      fullPath: '/advent2024'
      preLoaderRoute: typeof Advent2024LazyImport
      parentRoute: typeof rootRoute
    }
    '/bingo': {
      id: '/bingo'
      path: '/bingo'
      fullPath: '/bingo'
      preLoaderRoute: typeof BingoLazyImport
      parentRoute: typeof rootRoute
    }
    '/bingo-sql': {
      id: '/bingo-sql'
      path: '/bingo-sql'
      fullPath: '/bingo-sql'
      preLoaderRoute: typeof BingoSqlLazyImport
      parentRoute: typeof rootRoute
    }
    '/train-visualization': {
      id: '/train-visualization'
      path: '/train-visualization'
      fullPath: '/train-visualization'
      preLoaderRoute: typeof TrainVisualizationLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/advent2024': typeof Advent2024LazyRoute
  '/bingo': typeof BingoLazyRoute
  '/bingo-sql': typeof BingoSqlLazyRoute
  '/train-visualization': typeof TrainVisualizationLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/advent2024': typeof Advent2024LazyRoute
  '/bingo': typeof BingoLazyRoute
  '/bingo-sql': typeof BingoSqlLazyRoute
  '/train-visualization': typeof TrainVisualizationLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/advent2024': typeof Advent2024LazyRoute
  '/bingo': typeof BingoLazyRoute
  '/bingo-sql': typeof BingoSqlLazyRoute
  '/train-visualization': typeof TrainVisualizationLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/advent2024'
    | '/bingo'
    | '/bingo-sql'
    | '/train-visualization'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/advent2024' | '/bingo' | '/bingo-sql' | '/train-visualization'
  id:
    | '__root__'
    | '/'
    | '/advent2024'
    | '/bingo'
    | '/bingo-sql'
    | '/train-visualization'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  Advent2024LazyRoute: typeof Advent2024LazyRoute
  BingoLazyRoute: typeof BingoLazyRoute
  BingoSqlLazyRoute: typeof BingoSqlLazyRoute
  TrainVisualizationLazyRoute: typeof TrainVisualizationLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  Advent2024LazyRoute: Advent2024LazyRoute,
  BingoLazyRoute: BingoLazyRoute,
  BingoSqlLazyRoute: BingoSqlLazyRoute,
  TrainVisualizationLazyRoute: TrainVisualizationLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/advent2024",
        "/bingo",
        "/bingo-sql",
        "/train-visualization"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/advent2024": {
      "filePath": "advent2024.lazy.tsx"
    },
    "/bingo": {
      "filePath": "bingo.lazy.tsx"
    },
    "/bingo-sql": {
      "filePath": "bingo-sql.lazy.tsx"
    },
    "/train-visualization": {
      "filePath": "train-visualization.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
